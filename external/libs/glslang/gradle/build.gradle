buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		//classpath 'com.android.tools.build:gradle-experimental:0.6.0-beta5'
        //classpath 'com.android.tools.build:gradle-experimental:0.7.0-alpha1'
		classpath 'com.android.tools.build:gradle-experimental:0.8.0-alpha6'
	}
}

apply plugin: 'com.android.model.native'

def baseDir = "../../../.."	// base of the Vulkan-Samples repository
def glslangDir = "${baseDir}/../glslang"
def buildDir = "${baseDir}/build/android/gradle/external/libs/glslang"

project.buildDir = file(new File(buildDir))

model {
	android {
		compileSdkVersion = 21
		buildToolsVersion = "21.0.0"

		defaultConfig.with {
			minSdkVersion.apiLevel = 21
			targetSdkVersion.apiLevel = 21
			versionCode = 1
			versionName = "1.0"
		}
	}

	android.ndk {
		moduleName = "glslang"

		cppFlags.addAll(["-std=c++11", "-fno-exceptions", "-fno-rtti", "-Wall", "-DVK_USE_PLATFORM_ANDROID_KHR"])

		cppFlags.addAll([
			"-I${file("${glslangDir}/SPIRV/")}".toString(),
			"-I${file("${glslangDir}/hlsl/")}".toString(),
			"-I${file("${glslangDir}/OGLCompilersDLL/")}".toString(),
			"-I${file("${glslangDir}/glslang/OSDependent/Unix/")}".toString(),
			"-I${file("${glslangDir}/glslang/GenericCodeGen/")}".toString(),
			"-I${file("${glslangDir}/glslang/MachineIndependent/")}".toString(),
		])

		stl = "gnustl_static"
	}

	android.sources {
		main {
			jni {
				source {
					srcDir "${glslangDir}/SPIRV/"
					srcDir "${glslangDir}/hlsl/"
					srcDir "${glslangDir}/OGLCompilersDLL/"
					srcDir "${glslangDir}/glslang/OSDependent/Unix/"
					srcDir "${glslangDir}/glslang/GenericCodeGen/"
					srcDir "${glslangDir}/glslang/MachineIndependent/"
				}
				exportedHeaders {
					srcDir "${glslangDir}"
				}
			}
		}
	}

	android.buildTypes {
		release {
			ndk.with {
				debuggable = true
			}
			minifyEnabled = false
		}
	}

	android.productFlavors {
		create("all") {
			ndk.abiFilters.addAll([	"armeabi-v7a",
									"arm64-v8a",
									"x86",
									"x86_64" ])
		}
	}
}
