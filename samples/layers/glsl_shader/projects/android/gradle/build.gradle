import org.gradle.internal.os.OperatingSystem;

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		//classpath 'com.android.tools.build:gradle-experimental:0.6.0-beta5'
        //classpath 'com.android.tools.build:gradle-experimental:0.7.0-alpha1'
		classpath 'com.android.tools.build:gradle-experimental:0.8.0-alpha6'
	}
}

apply plugin: 'com.android.model.native'

def ndkDir = System.getenv('ANDROID_NDK_HOME')
if( ndkDir == null ) { ndkDir = System.getenv('ANDROID_NDK_ROOT') }
if( ndkDir == null ) { ndkDir = System.getenv('ANDROID_NDK') }
if( ndkDir == null ) { ndkDir = System.getenv('NDK_HOME') }
if( ndkDir == null ) { ndkDir = System.getenv('NDK_ROOT') }
if( ndkDir == null ) { ndkDir = System.getenv('NDKROOT') }
if( ndkDir == null )
{
	throw new GradleException('Android NDK path not found! Make sure ANDROID_NDK_HOME is set.')
}
def baseDir = "../../../../../.."	// base of the Vulkan-Samples repository
def buildDir = "${baseDir}/build/android/gradle/layers/glsl_shader"
def vkSdkPath = System.getenv('VK_SDK_PATH')

rootProject.buildDir = file(new File(buildDir))

model {

	android {
		compileSdkVersion = 21
		buildToolsVersion = "21.0.0"

		defaultConfig.with {
			minSdkVersion.apiLevel = 21
			targetSdkVersion.apiLevel = 21
			versionCode = 1
			versionName = "1.0"
		}
	}

	android.ndk {
		moduleName = "VkLayer_glsl_shader"

		cppFlags.addAll(["-std=c++11", "-fno-exceptions", "-fno-rtti", "-Wall", "-DVK_USE_PLATFORM_ANDROID_KHR"])

		cppFlags.addAll([
			"-I${file("${baseDir}/external/include")}".toString(),
			"-I${file("${baseDir}/../Vulkan-LoaderAndValidationLayers/include")}".toString(),
			"-I${file("${baseDir}/../Vulkan-LoaderAndValidationLayers/build/layers")}".toString(),
			"-I${file("${baseDir}/../glslang")}".toString(),
			"-I${file("${vkSdkPath}/Include")}".toString(),
			"-I${file("${vkSdkPath}/Source/layers")}".toString()
		])

		ldLibs.addAll(["android", "log"])

		stl = "gnustl_static"
	}

	android.sources {
		main {
			jni {
				source {
					srcDir "${baseDir}/samples/layers/glsl_shader/"
				}
				dependencies {
					project ":../../../../../../external/libs/glslang/gradle" linkage "static"
				}
			}
		}
	}

	android.buildTypes {
		release {
			ndk.with {
				debuggable = true
			}
			minifyEnabled = false
		}
	}

	// Turn on hard float support in armeabi-v7a
	android.abis {
		create("armeabi-v7a") {
			cppFlags.addAll(["-mhard-float", "-D_NDK_MATH_NO_SOFTFP=1", "-mfloat-abi=hard"])
			ldLibs.add("m_hard")
			ldFlags.add("-Wl,--no-warn-mismatch")
		}
	}

	android.productFlavors {
		create("all") {
			ndk.abiFilters.addAll([	"armeabi-v7a",
									"arm64-v8a",
									"x86",
									"x86_64" ])
		}
	}
}
